---
name: Terraform CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  TF_VERSION: "1.5.7"
  YC_CLOUD_ID: "b1g811k1u7vur9c50o56"
  YC_FOLDER_ID: "b1guevbvpqmirfgfolig"
  YC_ZONE: "ru-central1-a"

jobs:
  terraform:
    name: "Terraform"
    runs-on: "ubuntu-latest"
    environment: "production"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Setup Terraform"
        uses: "hashicorp/setup-terraform@v2"
        with:
          terraform_version: "${{ env.TF_VERSION }}"

      - name: "Terraform Init"
        env:
          TF_VAR_yc_token: "${{ secrets.YC_TOKEN }}"
        run: "terraform init"

      - name: "Terraform Format"
        run: "terraform fmt -check"

      - name: "Terraform Validate"
        run: "terraform validate"

      - name: "Terraform Plan"
        env:
          TF_VAR_yc_token: "${{ secrets.YC_TOKEN }}"
          TF_VAR_ssh_public_key: "${{ secrets.SSH_PUBLIC_KEY }}"
          TF_VAR_cloud_id: "${{ env.YC_CLOUD_ID }}"
          TF_VAR_folder_id: "${{ env.YC_FOLDER_ID }}"
          TF_VAR_default_zone: "${{ env.YC_ZONE }}"
        run: "terraform plan -input=false -no-color"

      - name: "Terraform Apply"
        if: "github.ref == 'refs/heads/main' && github.event_name == 'push'"
        env:
          TF_VAR_yc_token: "${{ secrets.YC_TOKEN }}"
          TF_VAR_ssh_public_key: "${{ secrets.SSH_PUBLIC_KEY }}"
          TF_VAR_cloud_id: "${{ env.YC_CLOUD_ID }}"
          TF_VAR_folder_id: "${{ env.YC_FOLDER_ID }}"
          TF_VAR_default_zone: "${{ env.YC_ZONE }}"
        run: "terraform apply -auto-approve -input=false"
